// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/example/equipment-rental/internal/app"
	"github.com/example/equipment-rental/internal/pkg/commom/config"
	"github.com/example/equipment-rental/internal/pkg/commom/logging"
)

// Injectors from wire.go:

func initializeConfig(path string) (config.Configuration, error) {
	configuration, err := config.NewConfig(path)
	if err != nil {
		return config.Configuration{}, err
	}
	return configuration, nil
}

func initializeAppender(configuration config.Configuration) (logging.FileAppender, error) {
	fileAppender := logging.NewFileAppender(configuration)
	return fileAppender, nil
}

func initializeApp(configuration config.Configuration) (*app.EquipmentRentalApp, error) {
	loggingLevels := config.NewLoggingLevels(configuration)
	logger := logging.NewLogger(loggingLevels)
	equipmentRentalApp := app.NewEquipmentRentalApp(logger)
	return equipmentRentalApp, nil
}
